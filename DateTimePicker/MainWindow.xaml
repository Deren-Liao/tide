<Window x:Class="DateTimePicker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DateTimePicker"
        xmlns:timePicker="clr-namespace:GoogleCloudExtension.Controls"
        xmlns:customCombo="clr-namespace:DateTimePicker"
        mc:Ignorable="d"
        Title="MainWindow" Height="360.606" Width="718.03">

    <Window.Resources>


        <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
            <StackPanel Margin="0,0,0,0" Background="White" />
            <!--Width="{Binding RelativeSource={RelativeSource Self},Path=Parent.ActualWidth}"/>-->
        </ItemsPanelTemplate>
        
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
        </Style>

        <ControlTemplate x:Key="PopupComboBox" TargetType="{x:Type ContentControl}" >
            <Grid>
            <ComboBox  HorizontalAlignment="Center" SelectedIndex="0"
                               VerticalAlignment="Center">
                <ComboBoxItem x:Name="FirstItem" HorizontalAlignment="Center"  Content="" >
                    <ComboBoxItem.Template>
                            <ControlTemplate>
                                <ContentPresenter Content="{Binding Content}" />
                            </ControlTemplate>
                    </ComboBoxItem.Template>
                </ComboBoxItem>
            </ComboBox>
            </Grid>
        </ControlTemplate>

    </Window.Resources>
    <!--<Window.Resources>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
                <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
            -->
    <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    <!--
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="#FF3F3F3F"

                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        -->
    <!-- SimpleStyles: ComboBoxItem -->
    <!--
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Grid>
        
        <Border Padding="10" Background="Bisque">
            <ComboBox Grid.Column="1" Height="30" Width="250" >
                <ComboBoxItem Name="Item1">Item1</ComboBoxItem>
                <ComboBoxItem Name="Item2">Item2</ComboBoxItem>
                <ComboBoxItem Name="Item3">Item3</ComboBoxItem>
                <ComboBoxItem Name="Item4">Item4</ComboBoxItem>
                <ComboBoxItem Name="Item5">Item5</ComboBoxItem>
                <ComboBoxItem Name="Item6">Item6</ComboBoxItem>
            </ComboBox>
        </Border>-->
    <!--<Window.Resources>
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        -->
    <!--Border colors-->
    <!--
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        -->
    <!--Control-specific resources.-->
    <!--
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlMouseOverColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledControlDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledForegroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledBorderDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlPressedColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).
                      (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                   Style="{x:Null}"
                   Template="{StaticResource ComboBoxTextBox}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Margin="3,3,23,3"
                   Focusable="True"
                   Background="Transparent"
                   Visibility="Hidden"
                   IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                      BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                   Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                                <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="4" />
                                <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />

            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />

        </Grid.RowDefinitions>
        <UniformGrid Rows="3" Columns="3">
            <StackPanel>
            <ToggleButton x:Name="dgDropdown" Width="160 
                          " >
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}" >
                                    <Border BorderBrush="DarkGray" BorderThickness="1" Margin="0" Padding="1">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"  />
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Name="Text" Text="Jump To Date" HorizontalAlignment="Center"
                                                  FontSize="16" />
                                            <Image Name="Image" Grid.Row="0" Grid.Column="1" Source="/DateTimePicker;component/Resources/bitmap1.bmp" Height="15" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="Text" Property="Text" Value="Jumped To Date" />
                                            <Setter TargetName="Image" Property="Source"  Value="/DateTimePicker;component/Resources/bitmap1.bmp" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Popup IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=dgDropdown}" StaysOpen="False"
        PlacementTarget="{Binding ElementName=dgDropdown}" Placement="Bottom" PopupAnimation="Slide">
                <Border BorderBrush="SlateBlue" BorderThickness="1"  CornerRadius="2" >
                    <Grid Background="LightGray">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBox Grid.Row="1" 
                     Text="Text box" 
                     Height="100" Margin="2"/>
                    </Grid>
                </Border>
            </Popup>
            </StackPanel>
        <!--<StackPanel>
            <ToggleButton x:Name="dgDropdown" Content="Some thing"   />
        <Popup IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=dgDropdown}" StaysOpen="False"
        PlacementTarget="{Binding ElementName=dgDropdown}" Placement="Bottom" PopupAnimation="Slide">
            <Border BorderBrush="SlateBlue" BorderThickness="1"  CornerRadius="2" >
                <Grid Background="LightGray">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBox Grid.Row="1" 
                     Text="Text box" 
                     Height="100" Margin="2"/>
                </Grid>
            </Border>
        </Popup>
        </StackPanel>-->

        <ComboBox
            x:Name="Combo1"
        Margin="4"
        Height="23"
        Width="160"  Grid.Row="1"
            Background="White"
            >

            <Button>
                <StackPanel Orientation="Horizontal">
                    <TextBlock > text 1</TextBlock>
                    <TextBlock > text 2</TextBlock>
                    <Button Click="Button_Click_1">Text 3</Button>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Visibility"  Value="Hidden" />


                    </Style>
                </Button.Style>
            </Button>
            <ComboBoxItem>
                <ComboBoxItem.Template>
                    <ControlTemplate>
                        <Button Click="Button_Click">
                            <StackPanel>
                                <TextBlock Text="You should see something" />
                                <TextBlock Text="You should see something" />
                            </StackPanel>
                        </Button>
                    </ControlTemplate>
                </ComboBoxItem.Template>
            </ComboBoxItem>
        </ComboBox>

        <ComboBox Grid.Row="2"
        Margin="4"
        Height="23"
        Width="250"  >

            <ComboBoxItem>
                <ComboBoxItem.Template>
                    <ControlTemplate>
                        <Button Click="Button_Click">
                            <StackPanel>
                                <TextBlock Text="You should see something" />
                                <TextBlock Text="You should see something" />
                            </StackPanel>
                        </Button>
                    </ControlTemplate>
                </ComboBoxItem.Template>
            </ComboBoxItem>
            <ComboBoxItem >
                <Border>
                    <Button HorizontalAlignment="Stretch">Some text</Button>
                </Border>
            </ComboBoxItem>

            <!--<ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Name" Margin="4,0"/>
                        <TextBlock Text="Address" Margin="4,0"/>
                        <TextBlock Text="TelephoneNumber" Margin="4,0"/>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>-->
        </ComboBox>

            <Border Margin="1" Background="White">
                <TextBox HorizontalAlignment="Center" VerticalAlignment="Center" Width="180"
                         Padding="1, 2, 0, 2">
                    <TextBox.Style>
                        <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <Style.Resources>
                                <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                    <VisualBrush.Visual>
                                        <Label Content="Search" Foreground="LightGray" />
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Style.Resources>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox> 
            </Border>
            <Border Margin="1" Background="LightGoldenrodYellow"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="160"
                    >
                <ComboBox Background="Yellow" Loaded="ComboBox_Loaded">
                    <!--<ComboBox.Resources>
                        <Style TargetType="ToggleButton" >
                            <Setter Property="Width" Value="180" />
                            <Setter Property="Background" Value="White" />
                        </Style>
                    </ComboBox.Resources>-->
                    <ComboBoxItem>Item 1</ComboBoxItem>
                    <ComboBoxItem>Item 2</ComboBoxItem>
                </ComboBox>
            </Border>
            <Border Margin="1" Background="LightGoldenrodYellow">
                <local:TimePicker ></local:TimePicker>
            </Border>
            <Border Margin="1" Background="LightGoldenrodYellow">

                <StackPanel Orientation="Horizontal" >
                    <customCombo:ComboBoxWithDropDown Margin="10">
                    <customCombo:ComboBoxWithDropDown.AdditionalContent>
                    <Button Background="White" Click="Button_Click_4" >Please Click</Button>
                    </customCombo:ComboBoxWithDropDown.AdditionalContent>
                </customCombo:ComboBoxWithDropDown>
                    <customCombo:ComboBoxWithDropDown Margin="10">
                        <customCombo:ComboBoxWithDropDown.AdditionalContent>
                            <Button Background="White" Click="Button_Click_4" >Please Click</Button>
                        </customCombo:ComboBoxWithDropDown.AdditionalContent>
                    </customCombo:ComboBoxWithDropDown>

                </StackPanel>
            </Border>
            <Border Margin="1" Background="LightGoldenrodYellow">
                <Border Margin="1" Background="LightGoldenrodYellow">


                    <customCombo:ComboBoxWithDropDown >
                        <customCombo:ComboBoxWithDropDown.AdditionalContent>
                            <Button Background="White" Click="Button_Click_4" >Please Click Again</Button>
                        </customCombo:ComboBoxWithDropDown.AdditionalContent>
                    </customCombo:ComboBoxWithDropDown>


                </Border>
            </Border>
            <Border Margin="1" Background="LightGoldenrodYellow"/>
        </UniformGrid>

        <UniformGrid Grid.Row="3
                     " Rows="3" Columns="3" >
            <Border Background="LightGoldenrodYellow" Margin="1">
                <StackPanel>
                    <ToolBar>
                        <Menu HorizontalAlignment="Right">
                            <MenuItem Header="Menu">
                                <MenuItem Header="MenuItem1"/>
                            </MenuItem>
                        </Menu>
                    </ToolBar>
                </StackPanel>
            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">
                <UniformGrid Rows="2" Columns="2" >
                <Menu DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <MenuItem Header="_Emulator">
                        <MenuItem Header="Load..."  />
                        <MenuItem Header="Load again">
                            <MenuItem Header="Load..."  />
                            <MenuItem Header="Load..."  />
                        </MenuItem>
                        <Separator />
                        <MenuItem >
                            <MenuItem.Header>
                                <DockPanel>
                                    <TextBlock>Step</TextBlock>
                                    <TextBlock Width="10"></TextBlock>
                                    <TextBlock HorizontalAlignment="Right">F2</TextBlock>
                                </DockPanel>
                            </MenuItem.Header>
                            
                        </MenuItem>
                    </MenuItem>
                </Menu>

                    <TextBlock x:Name="refreshClickText" ></TextBlock>
                </UniformGrid>
            </Border>
            <Border Background="White" Margin="1">
                <!--<Image Name="Image" Grid.Row="0" Grid.Column="1" Source="/DateTimePicker;component/Resources/refresh.png" 
                       
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       
                       />-->

                
     
                <Button Name="btnNext" HorizontalAlignment="Center" Click="btnNext_Click"
                        ToolTip="Something ? Can you see"
                        VerticalAlignment="Center" Width="64" Height="64"
                        Background="White"
                        BorderThickness="0"
                        PreviewMouseLeftButtonDown="btnNext_MouseDown" PreviewMouseLeftButtonUp="btnNext_MouseUp"
                        MouseLeave="btnNext_MouseLeave" MouseEnter="btnNext_MouseEnter"
                        >
                    <Button.Resources>
                        <Image x:Key="mousedownImage" Source="/DateTimePicker;component/Resources/refresh-mouseleftkeydown.png" />
                    </Button.Resources>
                    <Button.Style>
                        <Style  TargetType="Button">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter></ContentPresenter>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Image x:Name="nextImage" Margin="-1, -2, -1, -1" >
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="/DateTimePicker;component/Resources/refresh.png" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Source" Value="/DateTimePicker;component/Resources/refresh-mouseover.png" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Source" Value="/DateTimePicker;component/Resources/refresh.png" />
                                    </Trigger>                                    <!--<Trigger Property="" Mouse. Value="True" >
                                        <Setter Property="Source" Value="/DateTimePicker;component/Resources/refresh-moseleftkeydown.png" />

                                    </Trigger>-->
                                </Style.Triggers>
                                
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">
                <Grid VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" />

                    </Grid.RowDefinitions>
                    <Menu Grid.Row="0"  HorizontalAlignment="Center" Height="Auto" 
                          BorderThickness="1" BorderBrush="LightGray" >
 
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid   Rows="1" HorizontalAlignment="Stretch" Background="White" 
                                               Margin="0, -50, 0, 50" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <!-- This first menu item is styled to look like a combo box. -->
                        <!--BorderThickness="0"-->
                        <MenuItem x:Name="FirstMenu" HorizontalAlignment="Stretch" Padding="0, 2, 0, 2"
                                  
                                  >
                            <MenuItem.Header >
                                <!--Width="{Binding ActualWidth, ElementName=FirstMenu}"-->
                                <!--"{Binding RelativeSource={RelativeSource Self},Path=Parent.ActualWidth}"-->
                                <Grid Width="120" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Yes, the access key works! Width="90"   -->
                                    <TextBlock Grid.Column="0" HorizontalAlignment="Center"  
                                              VerticalAlignment="Stretch"
                                                Padding="0"> _Sort by </TextBlock>
                                        <Border Grid.Column="1" HorizontalAlignment="Right">
                                            <!-- The toggle button looks identical to the one used on a combo box
                because I based the definition below on the relevant portion of the
                combo box's default control template. -->
            <ToggleButton IsChecked="False" IsHitTestVisible="False" 
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Background="{TemplateBinding Panel.Background}"
                          Margin="0, 0, 5, 0"
                          >
                    
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <!-- The toggle control just needs visually appear. It doesn't
                    need to receive focus or be a tab stop. -->
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                </Style>
                                                </ToggleButton.Style>
                                                </ToggleButton>
                                        </Border>
                                </Grid>
                            </MenuItem.Header>
                          
                            <MenuItem Header="_Name">
                                <MenuItem Header="_Last" />
                                <MenuItem Header="_First" />
                            </MenuItem>
                        </MenuItem>
                </Menu>
                    <Button Grid.Row="1" Height="10" Margin="0, 10, 0, 0" ></Button>
                   </Grid>
            </Border>
            
            <Border Background="LightGoldenrodYellow" Margin="1">

                <Menu Grid.Row="0"  HorizontalAlignment="Center" Height="Auto"
                      VerticalAlignment="Center"
                          BorderThickness="1" BorderBrush="LightGray"  Background="White">

                    <!-- This first menu item is styled to look like a combo box. -->
                    <!--BorderThickness="0"-->
                    <MenuItem x:Name="SecondMenu" Padding="0, 2, 0, 2"                                 
                                  >

                        <MenuItem.Header>
                            <!--Width="{Binding ActualWidth, ElementName=FirstMenu}"-->
                            <!--"{Binding RelativeSource={RelativeSource Self},Path=Parent.ActualWidth}"-->
                            <Grid Width="150" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Yes, the access key works! Width="90"   -->
                                <TextBlock Grid.Column="0" HorizontalAlignment="Center"  
                                              VerticalAlignment="Stretch" Text="Jump To Earlier"
                                                Padding="5, 0, 5, 0" />
                                <Border Grid.Column="1" HorizontalAlignment="Right">
                                    <!-- The toggle button looks identical to the one used on a combo box
                because I based the definition below on the relevant portion of the
                combo box's default control template. -->
                                    <ToggleButton IsChecked="False" IsHitTestVisible="False" 
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Background="{TemplateBinding Panel.Background}"
                          Margin="0, 0, 5, 0"
                          >

                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                <!-- The toggle control just needs visually appear. It doesn't
                    need to receive focus or be a tab stop. -->
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Border>
                            </Grid>
                        </MenuItem.Header>

                        <!--Width="{Binding RelativeSource={RelativeSource Self},Path=Parent.ActualWidth}"-->
                        <MenuItem Header="30 Minutes"
                                  
                                  />
                        <MenuItem Header="1 Hour" />
                        <MenuItem Header="2 hours" />
                        <MenuItem Header="6 Hour" />
                        <MenuItem Header="1 Day" />
                        <MenuItem Header="5 Days" />
                        <MenuItem x:Name="PickDate" Header="_Pick a Date" 
                                  Click="MenuItem_Click"
                                  Width="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type Menu}}, Path=ActualWidth}"
                                  Margin="0, 0, -8, 0"
                                  >
                        </MenuItem>
                        <!--<MenuItem >
                            <MenuItem.Header>
                                <Calendar></Calendar>
                            </MenuItem.Header>
                        </MenuItem>-->

                        <!--<Separator  Margin="-30, 0, 0, 0" />

                        --><!--Width="{Binding RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type Menu}}, Path=ActualWidth}"--><!--

                        <MenuItem IsEnabled="True" >
                            <MenuItem.Header>
                                <TextBlock>Range</TextBlock>
                            </MenuItem.Header>
                            <MenuItem Header="30 Minutes" />
                            <MenuItem Header="1 Hour" />
                            <MenuItem Header="2 hours" />
                            <MenuItem Header="6 Hour" />
                            <MenuItem Header="12 Hours" />
                            <MenuItem Header="1 Day" />
                            <MenuItem Header="5 Days" />
                            <MenuItem Header="15 Days" />
                            <MenuItem >
                                <MenuItem.Header>
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBox Width="20" />
                                        <TextBlock Text="Days" />
                                        <TextBox Width="20" />
                                        <TextBlock Text="Minutes" />
                                    </StackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>-->                        
                    </MenuItem>
                </Menu>
            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">
                <ComboBox  x:Name="comboPickTime"
                    HorizontalAlignment="Center" 
                           Width="100"
                           VerticalAlignment="Center">

                    <!--<ComboBoxItem HorizontalAlignment="Stretch" HorizontalContentAlignment="Center">1 Day</ComboBoxItem>
                    <ComboBoxItem HorizontalAlignment="Stretch" HorizontalContentAlignment="Center">3 Days</ComboBoxItem>
                    <ComboBoxItem HorizontalAlignment="Center">5 Days</ComboBoxItem>
                    <ComboBoxItem HorizontalAlignment="Center">30 Days</ComboBoxItem>-->
                    <ComboBoxItem HorizontalAlignment="Center">
                        <ComboBoxItem.Template>
                            <ControlTemplate>
                                <Button Width="188">
                                    <UniformGrid Rows="3" Columns="3" Button.Click="Button_Click_2">
                                    <UniformGrid.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="Margin" Value="4"></Setter>
                                        </Style>
                                    </UniformGrid.Resources>
                                    <Button >0.5 Hour</Button>
                                    <Button >1 Hour</Button>
                                    <Button >2 Hour</Button>
                                    <Button >6 Hour</Button>
                                    <Button >12 Hour</Button>
                                    <Button >1 Day</Button>
                                    <Button >5 Days</Button>
                                    <Button >15 Days</Button>
                                    <Button >30 Days</Button>
                                </UniformGrid>
                                </Button>
                            </ControlTemplate>
                        </ComboBoxItem.Template>
                    </ComboBoxItem>
                    <ComboBoxItem x:Name="calendarBox">
                        <ComboBoxItem.Template>
                            <ControlTemplate>
                                <Button>
                                <StackPanel>
                                <Calendar x:Name="calendar" HorizontalAlignment="Center"
                                          SelectedDatesChanged="calendar_SelectedDatesChanged">
                                    
                                </Calendar>
                                    <!--<StackPanel>
                                        <Button Content="OK" HorizontalAlignment="Right" Click="Button_Click_2"></Button>
                                    </StackPanel>-->
                                </StackPanel>
                                </Button>
                            </ControlTemplate>
                        </ComboBoxItem.Template>
                    </ComboBoxItem>
                </ComboBox>
                
            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">

            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">
                <StackPanel  HorizontalAlignment="Center" VerticalAlignment="Center" >
                <Button Width="50" Height="20" Click="Button_Click_3" >
                        <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />

                </Button>
                    <TextBlock  x:Name="toggle" Text="Some" Margin="10"   />
                </StackPanel>
            </Border>
            <Border Background="LightGoldenrodYellow" Margin="1">
                <StackPanel>
                <ToggleButton x:Name="AdvancedFilter" HorizontalAlignment="Center" VerticalAlignment="Center"
                               IsChecked="False"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Background="{TemplateBinding Panel.Background}"
                          Margin="0, 0, 5, 0"                              
                          >

                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                

                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="IsTabStop" Value="False" />
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow"
                                    Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Popup IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=AdvancedFilter}" StaysOpen="False"
                       PlacementTarget="{Binding ElementName=AdvancedFilter}" Placement="Bottom" PopupAnimation="Slide">
                    <Border BorderBrush="SlateBlue" BorderThickness="1"  CornerRadius="2" >
                            <Button Background="White">Advanced Filter</Button>
                    </Border>
                </Popup>
                </StackPanel>
            </Border>
        </UniformGrid>
    </Grid>


</Window>
